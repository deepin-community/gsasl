@subheading gsasl_base64_to
@anchor{gsasl_base64_to}
@deftypefun {int} {gsasl_base64_to} (const char * @var{in}, size_t @var{inlen}, char ** @var{out}, size_t * @var{outlen})
@var{in}: input byte array.

@var{inlen}: size of input byte array.

@var{out}: pointer to newly allocated base64-encoded string.

@var{outlen}: pointer to size of newly allocated base64-encoded string.

Encode data as base64.  The  @code{out} string is zero terminated, and
 @code{outlen} holds the length excluding the terminating zero.  The  @code{out} buffer must be deallocated by the caller.

Return value: Returns @code{GSASL_OK}  on success, or @code{GSASL_MALLOC_ERROR} 
if input was too large or memory allocation fail.

@strong{Since:} 0.2.2
@end deftypefun

@subheading gsasl_base64_from
@anchor{gsasl_base64_from}
@deftypefun {int} {gsasl_base64_from} (const char * @var{in}, size_t @var{inlen}, char ** @var{out}, size_t * @var{outlen})
@var{in}: input byte array

@var{inlen}: size of input byte array

@var{out}: pointer to newly allocated output byte array

@var{outlen}: pointer to size of newly allocated output byte array

Decode Base64 data.  The  @code{out} buffer must be deallocated by the
caller.

Return value: Returns @code{GSASL_OK}  on success, @code{GSASL_BASE64_ERROR}  if
input was invalid, and @code{GSASL_MALLOC_ERROR}  on memory allocation
errors.

@strong{Since:} 0.2.2
@end deftypefun

@subheading gsasl_hex_to
@anchor{gsasl_hex_to}
@deftypefun {int} {gsasl_hex_to} (const char * @var{in}, size_t @var{inlen}, char ** @var{out}, size_t * @var{outlen})
@var{in}: input byte array.

@var{inlen}: size of input byte array.

@var{out}: pointer to newly allocated hex-encoded string.

@var{outlen}: pointer to size of newly allocated hex-encoded string.

Hex encode data.  The  @code{out} string is zero terminated, and  @code{outlen} holds the length excluding the terminating zero.  The  @code{out} buffer
must be deallocated by the caller.

Return value: Returns @code{GSASL_OK}  on success, or @code{GSASL_MALLOC_ERROR} 
if input was too large or memory allocation fail.

@strong{Since:} 1.10
@end deftypefun

@subheading gsasl_hex_from
@anchor{gsasl_hex_from}
@deftypefun {int} {gsasl_hex_from} (const char * @var{in}, char ** @var{out}, size_t * @var{outlen})
@var{in}: input byte array

@var{out}: pointer to newly allocated output byte array

@var{outlen}: pointer to size of newly allocated output byte array

Decode hex data.  The  @code{out} buffer must be deallocated by the
caller.

Return value: Returns @code{GSASL_OK}  on success, @code{GSASL_BASE64_ERROR}  if
input was invalid, and @code{GSASL_MALLOC_ERROR}  on memory allocation
errors.

@strong{Since:} 1.10
@end deftypefun

